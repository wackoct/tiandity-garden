<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Areas on</title><link>https://wackoct.github.io/tiandity-garden/area/</link><description>Recent content in Areas on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wackoct.github.io/tiandity-garden/area/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://wackoct.github.io/tiandity-garden/Area/%E7%AE%97%E6%B3%95/%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Area/%E7%AE%97%E6%B3%95/%E5%9F%BA%E7%A1%80/</guid><description>时间复杂度和空间复杂度 时间复杂度：渐进时间复杂度，表示算法的执行时间与数据规模之间的增长关系
空间复杂度：渐进空间复杂度，表示算法的存储空间与数据规模之间的增长关系
执行效率：执行时间、存储空间
大O表示法 T(n) = O(f(n))
所有代码的执行时间 T(n) 与每行代码的执行次数 n 成正比。
常见时间复杂度 按数量级递增如下：
常量阶 O(1) 对数阶 O(logn) ——二分查找 线性阶 O(n) —— 计数排序、基数排序、桶排序 线性对数阶 O(nlogn) —— 归并排序、快速排序、堆排序 平方阶 O(n^2) —— 冒泡排序、插入排序、选择排序 立方阶 O(n^3) 指数阶 O(2^n) 阶乘阶 O(n!</description></item></channel></rss>