<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>🪴 Quartz 3.3 on</title><link>https://wackoct.github.io/tiandity-garden/</link><description>Recent content in 🪴 Quartz 3.3 on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wackoct.github.io/tiandity-garden/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup</title><link>https://wackoct.github.io/tiandity-garden/notes/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/setup/</guid><description>Making your own Quartz Setting up Quartz requires a basic understanding of git. If you are unfamiliar, this resource is a great place to start!</description></item><item><title>Editing Content in Quartz</title><link>https://wackoct.github.io/tiandity-garden/notes/editing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/editing/</guid><description>Editing Quartz runs on top of Hugo so all notes are written in Markdown.
Folder Structure Here&amp;rsquo;s a rough overview of what&amp;rsquo;s what.</description></item><item><title>Obsidian Vault Integration</title><link>https://wackoct.github.io/tiandity-garden/notes/obsidian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/obsidian/</guid><description>Setup Obsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.</description></item><item><title>Preview Changes</title><link>https://wackoct.github.io/tiandity-garden/notes/preview-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/preview-changes/</guid><description>If you&amp;rsquo;d like to preview what your Quartz site looks like before deploying it to the internet, here&amp;rsquo;s exactly how to do that!</description></item><item><title>Deploying Quartz to the Web</title><link>https://wackoct.github.io/tiandity-garden/notes/hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/hosting/</guid><description>Hosting on GitHub Pages Quartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go!</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Area/%E7%AE%97%E6%B3%95/%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Area/%E7%AE%97%E6%B3%95/%E5%9F%BA%E7%A1%80/</guid><description>时间复杂度和空间复杂度 时间复杂度：渐进时间复杂度，表示算法的执行时间与数据规模之间的增长关系
空间复杂度：渐进空间复杂度，表示算法的存储空间与数据规模之间的增长关系
执行效率：执行时间、存储空间
大O表示法 T(n) = O(f(n))
所有代码的执行时间 T(n) 与每行代码的执行次数 n 成正比。
常见时间复杂度 按数量级递增如下：
常量阶 O(1) 对数阶 O(logn) ——二分查找 线性阶 O(n) —— 计数排序、基数排序、桶排序 线性对数阶 O(nlogn) —— 归并排序、快速排序、堆排序 平方阶 O(n^2) —— 冒泡排序、插入排序、选择排序 立方阶 O(n^3) 指数阶 O(2^n) 阶乘阶 O(n!</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-08-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-08-19/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-13/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-18/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-22/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-23/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-24/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-25/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-27/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-09-28/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-01/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-03/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-04/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-05/</guid><description>今天的灵感或闪念 项目经验 定义问题 解决问题 图片瀑布流布局显示
动态组件缓存</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-08/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-12/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-13/</guid><description>今天的灵感或闪念 #todo
How to write your own state management library The Web’s Next Transition</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-16/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-18/</guid><description>今天的灵感或闪念 #思考
26-超级访谈：对话玉伯
极客时间新出的访谈专栏，一口气刷完前 4 讲，下面摘录一些语录：
1.前端的核心价值：降本增效、提升体验、创新可能。
2.2018 年起，内部开始有一个倡导，让前端工程师往产品工程师方向发展。在语雀，前端不仅是前端，这个产品的后端实现、算法、运维等，前端工程师都在做，再加上对语雀的热爱，对产品有感知，前端写的代码是蕴含着对产品的喜爱的。
3.前端人群里，很容易出现优秀的产品经理。语雀的产品经理、钉钉的产品经理、微信读书的产品经理、飞书的产品经理，据我所知，都有不少产品经理之前是做前端的。
4.何为“体验”？把简单留给用户，同时也把简单留给自己。
5.好用并不取决于长得是否好看，好用更多取决于产品的操作交互是否贴合业务场景。所以从好看到好用，我目前更多在做的事情是，让特定领域的设计师深入业务。目前语雀的 UED 在语雀团队，设计师必须懂业务，得去研究用户的场景是什么、用户的高频操作是什么，然后再回到设计上，考虑怎样做到体验最好。在保证操作效率和好用的基础上，同样要保证多数人默认的好看。
6.产品设计同化的背后，是被已培养的用户习惯所裹挟。就像《三体》说的，文明进化会被锁死，其实产品体验也会被锁死。真的创新是要改变用户习惯的，在改变后，还能让用户喜欢，如果能做到这样才是真正的创新。
7.前端还常提的一个词是前端工程化。工程化的本质就一句话：让一群人做好一堆事。
8.从 App 再往前演进是什么？在中国就是小程序。目前航母级的应用，无论是微信还是支付宝，其实都希望自己的 App 里还能够跑 App，App 里面跑的 App 就叫小程序。</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Calendar/Daily-notes/2022-10-23/</guid><description>今天的灵感或闪念 #思考
UI感知外界的能力</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Extras/Templates/Calendar%E6%A8%A1%E6%9D%BF/Daily-notes%E6%A8%A1%E6%9D%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Extras/Templates/Calendar%E6%A8%A1%E6%9D%BF/Daily-notes%E6%A8%A1%E6%9D%BF/</guid><description>今天的灵感或闪念</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Extras/Templates/%E5%85%B6%E4%BB%96/dict/dict/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Extras/Templates/%E5%85%B6%E4%BB%96/dict/dict/</guid><description>callout语法 co-abstract=&amp;raquo; [!ABSTRACT] 摘要\n&amp;gt; $END$ | 📔摘要提示区块 |coa|co-summary|co-tldr
co-bug=&amp;raquo; [!ERROR] 异常\n&amp;gt; $END$ | 🐞异常提示区块 |cob|ad-bug
co-error=&amp;raquo; [!ERROR] 错误\n&amp;gt; $END$ | ⚡错误提示区块 |coe|co-error|co-danger</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Extras/Templates/%E5%85%B6%E4%BB%96/dict/%E6%9C%AA%E5%91%BD%E5%90%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Extras/Templates/%E5%85%B6%E4%BB%96/dict/%E6%9C%AA%E5%91%BD%E5%90%8D/</guid><description/></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Inbox/%E5%86%99%E5%A5%BD%E7%AE%80%E5%8E%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Inbox/%E5%86%99%E5%A5%BD%E7%AE%80%E5%8E%86/</guid><description>如何写好简历？
再说几个重点：
1.简历如同你的个人品牌形象，也是给面试官的第一印象。一定要花时间打磨，多找一些人 review，注重细节(文件名/格式、排版、字体、字号)。
2.内容精简，突出你的“亮点”，关键文字建议加粗，让面试官一眼就能看到。
3.STAR 原则，增强代入感，让面试官能够更加清楚你的价值。
4.成果一定要量化，一定要量化，一定要量化。(重要的事情说三遍)
5.升高维度，站在团队、企业的角度思考，企业喜欢哪种员工？
6.个人爱好要能够进一步突出自己，如：跑马拉松(耐力、毅力)、阅读写作(爱学习)。
7.自我评价要是千篇一律的话就不要写。</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Inbox/%E9%A1%B9%E7%9B%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Inbox/%E9%A1%B9%E7%9B%AE/</guid><description>用户资源访问JWT引入Refresh Token
城市自动定位附近一二线城市
实时搜索展示节流处理
多种图片规格瀑布流布局展示
城市选择列表按首字母排序实现
列表详情切换缓存列表页
多种组件关系通信
图文信息展示按卡片或列表动态排列
代码分包处理引入异步组件
重复请求清除副作用
监听数据表单提交获取
请求携带token封装Axios
五星好评组件封装
省市区级联选择器组件封装
日历组件封装
字母索引导航组件封装
用户操作按钮权限控制
%%登录状态持久化%%
重复打包引入全局注册Store</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Inbox/%E9%A1%B9%E7%9B%AE%E5%9B%9E%E7%AD%94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Inbox/%E9%A1%B9%E7%9B%AE%E5%9B%9E%E7%AD%94/</guid><description>乐酷APP 主体功能模块 组件化功能拆分 城市切换定位功能 搜索节流 瀑布流实现 首字母排序实现 次要功能模块 KeepAlive缓存Tabs列表 KeepAlive | Vue.js
多种组件通信 slot自定义组件内容 异步组件加载Loading组件优化 数据获取模块 watchEffect自执行请求数据 watch响应城市切换请求数据 Axios请求与响应拦截器 组件模块 五星好评组件 级联组件 日历组件 字母索引导航组件 其它模块 vue-router动态权限路由 Pinia管理客户端数据 LocalStorage缓存页面数据</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/Effects%E7%9B%B8%E5%85%B3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/Effects%E7%9B%B8%E5%85%B3/</guid><description>事件与Effects分离 事件处理进程仅在您再次执行相同的交互时重新运行。与事件处理进程不同，如果效果读取的某个值（如 prop 或状态变量）与上次渲染期间的值不同，则效果会重新同步
有时，您还希望混合使用这两种行为：一个效果，该效果会根据某些值重新运行，但不会响应其他值
事件处理进程中的逻辑不是反应式的。除非用户再次执行相同的交互（例如，单击），否则它不会再次运行。事件处理进程可以读取反应性值，但它们不会对其更改“做出反应” 效果内部的逻辑是被动的。如果效果读取反应性值，则必须将其指定为依赖项。然后，如果重新渲染导致该值发生变化，React 将使用新值再次重新运行效果的逻辑 您可以将非反应性逻辑从 Effects 移到 Event 函数中。仅从 Effects 内部调用 Event 函数
不要将 Event 函数传递给其他组件或 Hooks</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%B8%8EEffects%E5%90%8C%E6%AD%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%B8%8EEffects%E5%90%8C%E6%AD%A5/</guid><description>一些组件需要和外部系统同步
Effects 允许您在渲染后运行一些代码，以便您可以将组件与 React 外部的某个系统同步
什么是Effects，它和事件有什么不同？
渲染代码 事件处理器 Effects 允许您指定由渲染本身而不是由特定事件引起的副作用
不要急于向组件添加 Effects
Effects 通常用于“退出”您的 React 代码并与某些外部系统同步。
如何编写Effect
声明 Effect 指定 Effect 依赖 如果需要添加 cleanup 函数 useEffect 会“延迟”一段代码的运行，直到该渲染反映在屏幕上</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E9%9C%80%E8%A6%81Effect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E9%9C%80%E8%A6%81Effect/</guid><description>Effect是React程序中的逃生舱
它们允许您“走出”React，并将您的组件与一些外部系统同步
删除不必要的Effects将使代码更易于遵循，运行速度更快，并且不易出错
如何移除不必要的Effects 你不需要 Effects 来转换数据以进行渲染 你不需要 Effects 处理用户事件 基于props或state更新状态 当某些东西可以从现有的 props 或 state 中计算出来时，不要把它放在 state 中。相反，请在渲染期间计算它</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%BD%BF%E7%94%A8Refs%E5%BC%95%E7%94%A8%E5%80%BC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%BD%BF%E7%94%A8Refs%E5%BC%95%E7%94%A8%E5%80%BC/</guid><description>想要组件记住一些信息，但不想触发新的渲染，可以使用ref
在组件中添加ref 1 2 3 4 5 const ref = useRef(0) { current: 0 } 通过ref.value访问ref的当前值
可变的 黑盒——react不会追踪</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%BD%BF%E7%94%A8Refs%E6%93%8D%E4%BD%9CDOM/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%BD%BF%E7%94%A8Refs%E6%93%8D%E4%BD%9CDOM/</guid><description>React自动更新DOM去匹配渲染输出
在一些场景下，你需要访问由React管理的DOM元素：节点聚焦、滚动到节点或测量其大小和位置
1 2 3 4 5 6 const myRef = useRef(null); &amp;lt;div ref={myRef}&amp;gt; // 你可以使用任意的浏览器API myRef.current.scrollIntoView(); 传递函数给ref属性——ref callback</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E5%8F%8D%E5%BA%94-Effects-%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E5%8F%8D%E5%BA%94-Effects-%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid><description>Effects 与组件具有不同的生命周期
组件可以装载、更新或卸载
Effects 只能执行两项操作：开始同步某些内容，稍后停止同步它
Effect的生命周期 每个React组件的生命周期
组件在添加到屏幕时，组件挂载 组件在接收新的props和状态时，组件更新。通常在响应交互时发生 组件从屏幕中删除时，组件卸载 这是考虑组件的好方法，但不是关于 Effects 的好方法
Effects 描述如何将外部系统与当前属性和状态同步
为什么同步可能需要多次发生 React 如何重新同步您的Effect 停止同步，调用清楚函数</description></item><item><title/><link>https://wackoct.github.io/tiandity-garden/Resource/%E6%9C%AA%E5%91%BD%E5%90%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/Resource/%E6%9C%AA%E5%91%BD%E5%90%8D/</guid><description>00:05
各位同学大家好，这节课呢，我们来讲一下react的国际化，那首先呢，我们先创建一个react项目，然后的话，我们可以在S2C底下呢，创建一个文件夹文件夹里面呢，还是存放我们跟语言相关的一些内容，我们比较locals，Locals里面呢，我们定义两个Json文件，一个是1n.Jason就是英文，还有一个呢，是Zh.Jason就是中文，而在这两个Json文件里面呢，我们就订一些内容，比如说我们在这儿呢，我们定一段中文，比如说我们定一个一个模块，这个模块呢，比如说是我们一个用户的模块，那用户模块里面呢，我们订一个字段，那这个字段呢，比如叫ad，那这里的话我们就对应一个新增，
01:02
然后比如在一个edit，他定的是编辑，OK，我们就定这两个字段，然后呢，我们到一点点jays里面也同样的来定一下相对应的一个内容，那如果是APP的话呢，那么我们就应该是ad，如果是APP的话呢，我们就是added，那这样一来，我们相对这个语言就已经有了，那么接下来呢，我们就可以在我们的app.gs里面进行一个改写，那么这个首先我们先安装一下我们的插件，那这个地方我们要安装的是n PM install，一个叫I18NEXT，这个就是做国际化的一个包，然后呢，还有个专门用于right，就是rightf18next，好把这两个包去安装一下，
02:00
这里有点问题，我们再试一次n PM install，这次好像，可以安装上，那我今天网络有点问题，我们一样是看吧，一样ad mi red，I18NEXT，还有呢，就是I18NEXT后面一样来安装吧，好像好像也是网络有问题，我调一下网络，然后我们再安装，OK，那这里面呢，我们已经安装好了，刚才呢，我看了一下是这个淘宝的圆的问题，我在刚才使用的是淘宝的镜像，所以说淘宝镜像呢，好像是有点问题的，如果大家，自己在做的时候也有问题的话呢，你可以把它切换到我们的NPM官方的镜像，
03:01
我们来看一下，在这儿，他说请求这个淘宝镜像呢，失败了对吧，所以说我后来呢，就换了一下我们的官方的NPM镜像，然后呢，在安装最后呢，我们就安装成功了，OK，那安装成功之后呢，我们下面来到这个app.gs里面，那么我们就可以使用这个我们安装这样两个工具了，那么首先呢，我们可以先去import一下，这里呢，我们先这样子，我们在locals里面呢，我们先创建一个index.js啊，去初始化一下我们的S8N这个东西，那么首先呢，我们可以在这个文件里面去引入我们的S8N，Ah from and I SPY next，OK，然后下面下面的话呢，我们要去把这个react f BA next也给它引入进来，</description></item><item><title>Callouts</title><link>https://wackoct.github.io/tiandity-garden/notes/callouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/callouts/</guid><description>Callout support Quartz supports the same Admonition-callout syntax as Obsidian.
This includes
12 Distinct callout types (each with several aliases) Collapsable callouts See documentation on supported types and syntax here.</description></item><item><title>CJK + Latex Support (测试)</title><link>https://wackoct.github.io/tiandity-garden/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</guid><description>Chinese, Japanese, Korean Support 几乎在我们意识到之前，我们已经离开了地面。
우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.
私たちがそれを知るほぼ前に、私たちは地面を離れていました。
Latex Block math works with two dollar signs $$.</description></item><item><title>Configuration</title><link>https://wackoct.github.io/tiandity-garden/notes/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/config/</guid><description>Configuration Quartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you&amp;rsquo;d like to get.</description></item><item><title>Custom Domain</title><link>https://wackoct.github.io/tiandity-garden/notes/custom-Domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/custom-Domain/</guid><description>Registrar This step is only applicable if you are using a custom domain! If you are using a &amp;lt;YOUR-USERNAME&amp;gt;.github.io domain, you can skip this step.</description></item><item><title>Ignoring Notes</title><link>https://wackoct.github.io/tiandity-garden/notes/ignore-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/ignore-notes/</guid><description>Quartz Ignore Edit ignoreFiles in config.toml to include paths you&amp;rsquo;d like to exclude from being rendered.
1 2 3 4 5 6 .</description></item><item><title>Quartz Philosophy</title><link>https://wackoct.github.io/tiandity-garden/notes/philosophy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/philosophy/</guid><description>“[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.</description></item><item><title>Search</title><link>https://wackoct.github.io/tiandity-garden/notes/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/search/</guid><description>Quartz supports two modes of searching through content.
Full-text Full-text search is the default in Quartz. It produces results that exactly match the search query.</description></item><item><title>Showcase</title><link>https://wackoct.github.io/tiandity-garden/notes/showcase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/showcase/</guid><description>Want to see what Quartz can do? Here are some cool community gardens :)
Quartz Documentation (this site!) Jacky Zhao&amp;rsquo;s Garden Scaling Synthesis - A hypertext research notebook AWAGMI Intern Notes Shihyu&amp;rsquo;s PKM Chloe&amp;rsquo;s Garden SlRvb&amp;rsquo;s Site Course notes for Information Technology Advanced Theory Brandon Boswell&amp;rsquo;s Garden Siyang&amp;rsquo;s Courtyard Data Dictionary 🧠 sspaeti.</description></item><item><title>Troubleshooting and FAQ</title><link>https://wackoct.github.io/tiandity-garden/notes/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/troubleshooting/</guid><description>Still having trouble? Here are a list of common questions and problems people encounter when installing Quartz.
While you&amp;rsquo;re here, join our Discord :)</description></item><item><title>Updating</title><link>https://wackoct.github.io/tiandity-garden/notes/updating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wackoct.github.io/tiandity-garden/notes/updating/</guid><description>Haven&amp;rsquo;t updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update!</description></item></channel></rss>