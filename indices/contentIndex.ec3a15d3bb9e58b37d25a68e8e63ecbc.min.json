{"/":{"title":"🪴 Quartz 3.3","content":"\nHost your second brain and [digital garden](https://jzhao.xyz/posts/networked-thought) for free. Quartz features\n\n1. Extremely fast natural-language [[notes/search]]\n2. Customizable and hackable design based on [Hugo](https://gohugo.io/)\n3. Automatically generated backlinks, link previews, and local graph\n4. Built-in [[notes/CJK + Latex Support (测试) | CJK + Latex Support]] and [[notes/callouts | Admonition-style callouts]]\n5. Support for both Markdown Links and Wikilinks\n\nCheck out some of the [amazing gardens that community members](notes/showcase.md) have published with Quartz or read about [why I made Quartz](notes/philosophy.md) to begin with.\n\n## Get Started\n\u003e 📚 Step 1: [Setup your own digital garden using Quartz](notes/setup.md)\n\nReturning user? Figure out how to [[notes/updating|update]] your existing Quartz garden.\n\nIf you prefer browsing the contents of this site through a list instead of a graph, you see a list of all [setup-related notes](/tags/setup).\n\n### Troubleshooting\n- 🚧 [Troubleshooting and FAQ](notes/troubleshooting.md)\n- 🐛 [Submit an Issue](https://github.com/jackyzha0/quartz/issues)\n- 👀 [Discord Community](https://discord.gg/cRFFHYye7t)\n\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Area/%E7%AE%97%E6%B3%95/%E5%9F%BA%E7%A1%80":{"title":"","content":"\n### 时间复杂度和空间复杂度\n\n时间复杂度：渐进时间复杂度，表示算法的执行时间与数据规模之间的增长关系  \n空间复杂度：渐进空间复杂度，表示算法的存储空间与数据规模之间的增长关系\n\n执行效率：执行时间、存储空间\n\n#### 大O表示法\n\n**T(n) = O(f(n))**  \n所有代码的执行时间 T(n) 与每行代码的执行次数 n 成正比。\n\n#### 常见时间复杂度\n\n按数量级递增如下：\n\n- 常量阶 O(1)\n- 对数阶 O(logn) ——二分查找\n- 线性阶 O(n) —— 计数排序、基数排序、桶排序\n- 线性对数阶 O(nlogn) —— 归并排序、快速排序、堆排序\n- 平方阶 O(n^2) —— 冒泡排序、插入排序、选择排序\n- 立方阶 O(n^3)\n- 指数阶 O(2^n)\n- 阶乘阶 O(n!)\n\n判断时间复杂度的小技巧：\n\n- 单段代码看高频：循环\n- 多段代码取最大：有循环和多重循环的情况，取多重循环的复杂度\n- 嵌套代码求乘积：循环中的递归\n- 多个规模求和：分别有两个参数控制两个循环的次数，取二者的复杂度相加\n\n#### 常见空间复杂度\n\n- O(1)\n- O(n)\n- O(n^2) —— 二位数组\n\n**一般在实际中，空间复杂度和你初始化的数组长度有关。除此之外，也和递归的深度有关**\n\n时间复杂度和空间复杂度往往是相互影响的，两者不可得兼。  \n在工程以及算法解题套路中，根据实际情况，常用的做法就是空间换时间。比如：记忆化搜索、缓存等。\n\n### 递归\n\n```js\nconst factorial = function(n) {\n\tif (n \u003c= 1) {\n\t return 1;\n\t} \n\treturn n * factorial(n - 1);\n}\n```\n\n递归无非就是把问题拆解成具有相同解决思路的子问题，直到最后被拆解的子问题不能够拆分，这个过程是“递”。  \n当解决了最小粒度可求解的子问题后，在“归”的过程中顺其自然的解决了最开始的问题\n\n#### 复杂度分析\n\n总时间 = 子问题个数 * 解决一个子问题需要的时间\n\n##### 动态规划解法\n\n递归是自顶向下(看上文递归树)，动态规划是自底向上，将递归改成迭代\n\n```js\nconst fib = function(n) {\n\tif (n == 0) {\n\t return 0;\n\t} \n\tlet a1 = 0;\n\tlet a2 = 1;\n\tfor (let i = 1; i \u003c n; i++) {\n\t [a1, a2] = [a2, a1 + a2];\n\t} \n\treturn a2; \n```\n\n### 算法思想\n\n- 分治：分而治之，先解决子问题，再将子问题的解合并求出原问题。\n- 贪心：一条路走到黑，选择当下局部最优的路线，没有后悔药。\n- 回溯：一条路走到黑，手握后悔药，可以无数次重来。(英雄联盟艾克大招无冷却)。\n- 动态规划：上帝视角，手握无数平行宇宙的历史存档，同时发展出无数个未来。\n\n#### 分治算法\n\n- 分解：将原问题分解成一系列子问题\n- 解决：递归求解各个子问题，若子问题足够小，则直接求解\n- 合并：将子问题的结果合并成原问题\n\n```js\n// 归并排序\nconst mergeSort = function(arr) {\n\tconst len = arr.length;\n\tif (len \u003e 1) {\n\t\tconst middle = Math.floor(len / 2);\n\t\tconst left = arr.slice(0, middle);\n\t\tconst right = arr.slice(middle, len);\n\t\tlet i = 0, j = 0, k = 0;\n\t\tmergeSort(left);\n\t\tmergeSort(right);\n\t\twhile(i \u003c left.length \u0026\u0026 j \u003c right.length) {\n\t\t\tif (left[i] \u003c right[j]) {\n\t\t\t\tarr[k] = left[i];\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tarr[k] = left[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\t\twhile (i \u003c left.length) {\n\t\t\tarr[k] = left[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\twhile (j \u003c right.length) {\n\t\t\tarr[k] = right[j];\n\t\t\tj++;\n\t\t\tk++:\n\t\t}\n\t}\n\treturn arr;\n}\n```\n\n#### 动态规划\n\n##### 动态规划三要素\n\n- 重叠子问题\n- 最优子结构\n- 状态转移方程\n\n##### 重叠子问题\n\n切换机器思维，自底向上思考\n\n爬第n阶楼梯的方法数量，等于两部分之和：\n\n- 爬上 n - 1 阶楼梯的方法数量\n- 爬上 n - 2 阶楼梯的方法数量\n\n##### 最优子结构\n\n子问题的最优解能够推出原问题的优解\n\n##### 状态转移方程\n\n**dp[n] = dp[n - 1] + dp[n - 2]**\n\n```js\n// 爬楼梯\nconst climbStairs = function(n) {\n\tconst dp = [];\n\tdp[0] = 1;\n\tdp[1] = 1;\n\tfor (let i = 2; i \u003c= n; i++) {\n\t dp[i] = dp[i-1] + dp[i-2];\n\t} \n\treturn dp[n];\n};\n\n// 优化\nconst climeStairs2 = function(n) {\n\tlet a1 = 1;\n\tlet a2 = 1;\n\tfor (let i = 2; i \u003c= n; i++) {\n\t\t[a1, a2] = [a2, a1 + a2];\n\t}\n\treturn a2;\n}\n```\n\n#### 贪心算法\n\n`贪心算法`是`动态规划`算法的一个子集，可以更高效解决一部分更特殊的问题。实际上，用贪心算法解决问题的思路，并不总能给出最优解。因为它在每一步的决策中，选择目前最优策略，不考虑全局是不是最优\n\n分发饼干\n\n##### 思路：贪心算法 + 双指针求解\n\n- 给一个孩子的饼干应当尽量小并且能满足孩子，大的留来满足胃口大的孩子\n- 因为胃口小的孩子最容易得到满足，所以优先满足胃口小的孩子需求\n- 按照从小到大的顺序使用饼干尝试是否可满足某个孩子\n- 当饼干 j \u003e= 胃口 i 时，饼干满足胃口，更新满足的孩子数并移动指针 `i++ j++ res++`\n- 当饼干 j \u003c 胃口 i 时，饼干不能满足胃口，需要换大的 `j++`\n\n##### 关键点\n\n将需求因子 g 和 s 分别从小到大进行排序，使用贪心思想配合双指针，每个饼干只尝试一次，成功则换下一个孩子来尝试\n\n```js\nconst findContentChildren = function(g, s) {\n\tg = g.sort((a, b) =\u003e a - b);\n\ts = s.sort((a, b) =\u003e a - b);\n\tlet gi = 0;\n\tlet sj = 0;\n\tlet res = 0;\n\twhile (gi \u003c g.length \u0026\u0026 sj \u003c s.length) {\n\t\tif (s[sj] \u003e= g[gi]) {\n\t\t\tgi++;\n\t\t\tsj++;\n\t\t\tres++;\n\t\t} else {\n\t\t\tsj++;\n\t\t}\n\t}\n\treturn res;\n}\n```\n\n#### 回溯算法\n\n回溯算法本质上就是枚举，使用摸着石头过河的查找策略，还可以通过剪枝少走冤枉路\n\n##### 思路\n\n使用回溯法进行求解，回溯是一种通过穷举所有可能情况来找到所有解的算法。如果一个候选解最后被发现并不是可行解，回溯算法会舍弃它，并在前面的一些步骤做出一些修改，并重新尝试找到可行解。究其本质，其实就是枚举。\n\n如果没有更多的数字需要被输入，说明当前的组合已经产生。\n\n如果还有数字需要被输入：\n\n- 遍历下一个数字所对应的所有映射的字母\n- 将当前的字母添加到组合最后，也就是 `str + tmp[r]`\n\n##### 关键点\n\n在for循环中调用递归。\n\n##### 复杂度分析\n\nN+M 是输入数字的总数\n\n- 时间复杂度：O(3^N * 4^M)\n- 空间复杂度：O(3^N * 4^M)\n\n```js\nconst letterCombinations = function (digits) {\n\tif (!digits) {\n\t\treturn [];\n\t}\n\tconst len = digits.length;\n\tconst map = new Map();\n\tmap.set('2', 'abc');\n\tmap.set('3', 'def');\n\tmap.set('4', 'ghi');\n\tmap.set('5', 'jkl');\n\tmap.set('6', 'mno');\n\tmap.set('7', 'pqrs');\n\tmap.set('8', 'tuv');\n\tmap.set('9', 'wxyz');\n\tconst result = [];\n\n\tfunction generate(i, str) {\n\t\tif (i == len) {\n\t\t\tresult.push(str);\n\t\t\treturn;\n\t\t}\n\t\tconst tmp = map.get(digits[i]);\n\t\tfor (let r = 0; r \u003c tmp.length; r++) {\n\t\t\tgenerate(i + 1, str + tmp[r]);\n\t\t}\n\t}\n\tgenerate(0, '');\n\treturn result;\n}\n```\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-08-19":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-09-13":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-09-18":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-09-22":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-09-23":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-09-24":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-09-25":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-09-27":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-09-28":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-01":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-03":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-04":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-05":{"title":"","content":"\n## 今天的灵感或闪念\n\n### 项目经验\n\n- 定义问题\n- 解决问题\n\n图片瀑布流布局显示  \n动态组件缓存\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-08":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-12":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-13":{"title":"","content":"\n## 今天的灵感或闪念\n\n#todo\n\n1. [How to write your own state management library](https://judehunter.dev/blog/how-to-write-your-own-state-management-library)\n2. [The Web’s Next Transition](https://www.epicweb.dev/the-webs-next-transition)\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-16":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-18":{"title":"","content":"\n## 今天的灵感或闪念\n\n#思考\n\n**26-超级访谈：对话玉伯**  \n极客时间新出的访谈专栏，一口气刷完前 4 讲，下面摘录一些语录：\n\n1.前端的核心价值：降本增效、提升体验、创新可能。\n\n2.2018 年起，内部开始有一个倡导，让前端工程师往产品工程师方向发展。在语雀，前端不仅是前端，这个产品的后端实现、算法、运维等，前端工程师都在做，再加上对语雀的热爱，对产品有感知，前端写的代码是蕴含着对产品的喜爱的。\n\n3.前端人群里，很容易出现优秀的产品经理。语雀的产品经理、钉钉的产品经理、微信读书的产品经理、飞书的产品经理，据我所知，都有不少产品经理之前是做前端的。\n\n4.何为“体验”？把简单留给用户，同时也把简单留给自己。\n\n5.好用并不取决于长得是否好看，好用更多取决于产品的操作交互是否贴合业务场景。所以从好看到好用，我目前更多在做的事情是，让特定领域的设计师深入业务。目前语雀的 UED 在语雀团队，设计师必须懂业务，得去研究用户的场景是什么、用户的高频操作是什么，然后再回到设计上，考虑怎样做到体验最好。在保证操作效率和好用的基础上，同样要保证多数人默认的好看。\n\n6.产品设计同化的背后，是被已培养的用户习惯所裹挟。就像《三体》说的，文明进化会被锁死，其实产品体验也会被锁死。真的创新是要改变用户习惯的，在改变后，还能让用户喜欢，如果能做到这样才是真正的创新。\n\n7.前端还常提的一个词是前端工程化。工程化的本质就一句话：让一群人做好一堆事。\n\n8.从 App 再往前演进是什么？在中国就是小程序。目前航母级的应用，无论是微信还是支付宝，其实都希望自己的 App 里还能够跑 App，App 里面跑的 App 就叫小程序。\n\n9.独立 App 依旧会长期存在，至少在未来 5-10 年依旧会有不少需求量。不少行业还是有做 App 的需求，比如说在金融行业。好多金融机构、银行有很强的做自己独立 App 的需求，这涉及用户心智问题，App 可以给用户一种正规平台的感觉，给人安全感，比如转账操作在小程序很多人觉得不放心，毕竟大家对 App 的信任感也培养了好多年。\n\n10.客户端工程师的三个建议发展方向：转前端、做一些对性能要求很高的业务、往整个终端的基础技术走，比如做小程序的容器、下面的网络，做端智能、容器等方向。\n\n11.从 2008 年，一直到目前为止，都是缺前端的。还没有哪个团队说前端会富裕。甚至之前我通过一些数据，能够判断公司哪块业务做得好。当某个业务嚷着叫着缺前端的时候，这块业务是很不错的。但当某个业务我给他推简历，他不要的时候，那这个业务可能增长遇到了点问题，或者它才刚起步。\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-23":{"title":"","content":"\n## 今天的灵感或闪念\n\n#思考\n\nUI感知外界的能力\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-26":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-27":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Calendar/Daily-notes/2022-10-28":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Extras/Templates/%E5%85%B6%E4%BB%96/dict/%E6%9C%AA%E5%91%BD%E5%90%8D":{"title":"","content":"","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Extras/Templates/%E5%85%B6%E4%BB%96/dict/dict":{"title":"","content":"\n## callout语法\n\nco-abstract=\u003e\u003e [!ABSTRACT] 摘要\\n\u003e $END$ | 📔摘要提示区块 |coa|co-summary|co-tldr\n\nco-bug=\u003e\u003e [!ERROR] 异常\\n\u003e $END$ | 🐞异常提示区块 |cob|ad-bug\n\nco-error=\u003e\u003e [!ERROR] 错误\\n\u003e $END$ | ⚡错误提示区块 |coe|co-error|co-danger\n\nco-example=\u003e\u003e [!EXAMPLE] 范例\\n\u003e $END$ | 📑范例提示区块 |coex\n\nco-fail=\u003e\u003e [!FAIL] 失败\\n\u003e $END$ | ❌失败提示区块 |cof\n\nco-info=\u003e\u003e [!INFO] 提示\\n\u003e $END$ | ℹ️资讯提示区块 |coi\n\nco-note=\u003e\u003e [!NOTE] 笔记\\n\u003e $END$ | ✏️重点提示区块 |con\n\nco-quote=\u003e\u003e [!QUOTE] 引用\\n\u003e $END$ | ✨引用提示区块 |coqo\n\nco-question=\u003e\u003e [!QUESTION] 问题\\n\u003e $END$ | ❓问题提示区块 |coq\n\nco-success=\u003e\u003e [!SUCCESS] 完成\\n\u003e $END$ | ✅完成提示区块 |cos|co-done\n\nco-warning=\u003e\u003e [!WARNING] 注意❗\\n\u003e $END$ | ⚠️警告提示区块 |cow\n\nco-tip=\u003e\u003e [!TIP] 技巧💡 \\n\u003e $END$ | 🔥技巧提示区块 |cot\n\nco-lol=\u003e\u003e\u003e [!lol] 有趣\\n$END$ | 😁有趣提示区块 |col|co-LOL\n\nco-comment=\u003e\u003e [!comment] 建议 \\n\u003e $END$ | 💡建议提示区块 |coc\n\nco-reference=\u003e\u003e [!REFERENCE] 参考 \\n\u003e $END$ | 📖参考提示区块 |cor\n\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Extras/Templates/Calendar%E6%A8%A1%E6%9D%BF/Daily-notes%E6%A8%A1%E6%9D%BF":{"title":"","content":"## 今天的灵感或闪念\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Inbox/%E5%86%99%E5%A5%BD%E7%AE%80%E5%8E%86":{"title":"","content":"  \n\n[如何写好简历？](https://mp.weixin.qq.com/s/S3XHfb0zD0UiPZypYSlCnw)  \n\n再说几个重点：  \n1.简历如同你的个人品牌形象，也是给面试官的第一印象。一定要花时间打磨，多找一些人 review，注重细节(文件名/格式、排版、字体、字号)。  \n\n2.内容精简，突出你的“亮点”，关键文字建议加粗，让面试官一眼就能看到。  \n\n3.STAR 原则，增强代入感，让面试官能够更加清楚你的价值。\n\n4.成果一定要量化，一定要量化，一定要量化。(重要的事情说三遍)\n\n5.升高维度，站在团队、企业的角度思考，企业喜欢哪种员工？\n\n6.个人爱好要能够进一步突出自己，如：跑马拉松(耐力、毅力)、阅读写作(爱学习)。\n\n7.自我评价要是千篇一律的话就不要写。\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Inbox/%E9%A1%B9%E7%9B%AE":{"title":"","content":"\n### 乐酷生活通\n\n用户资源访问JWT引入Refresh Token  \n城市自动定位附近一线城市  \n多种图片规格瀑布流布局展示  \n评价细化实现评价标签统计  \n介绍视频自动播放解决  \n图片保护实现加水印功能  \n海报生成分享  \n推荐排序引入类型权重分析记录\n\n详情加载引入Loading过渡效果  \n搜索热点展示实现上下滚动切换  \n城市选择列表按首字母排序实现  \n图文浏览实现滚动节流处理\n\n重复请求发生竞态问题清除副作用  \n问卷调研实现监听数据表单提交获取  \n**请求携带token封装Axios**  \n\n五星好评组件封装  \n省市区级联选择器组件封装  \n日历组件封装  \n字母索引导航组件封装\n\n用户操作按钮权限控制  \n时间格式处理utils封装  \n重复打包引入全局注册Store  \n城市切换缓存最近数据  \n列表详情切换缓存列表页  \n多种组件关系通信  \n代码分包处理引入异步组件\n\n### 妙课堂资讯\n\n爬虫可配置化封装puppetter方法  \n数据收集抽离内容爬取方法注入  \nAPI划分封装controller层方法  \n执行脚本文件封装子进程模块\n\nRESTful API  \n错误处理  \n文件压缩处理  \n主子进程共享数据流  \n响应对象重构中间件处理\n\nPrisma与MongoDB的应用  \nPrisma数据模型迁移数据库  \n策略模式封装数据库操作  \n数据表关联查询\n\n账号明文密码Crypto加密处理  \n统一API封装Redis的get和set功能  \n编写资源自动上传云服务脚本  \n资源访问实现文件资源权限验证  \n**koa-router模块化路由接口**  \n\n### 妙课堂资讯后台管理\n\n多页面登录自动登入实现  \n资源访问管理多种用户角色权限实现  \n表格数据编辑优化实现可编辑表格行  \n表单模板统一动态表单渲染处理  \n消息通知实现\n\n长列表展示实现分页功能  \n多文件上传实现批量处理  \n表格条件展示实现筛选功能  \n表格离线查看实现导出execl文件功能  \n动态面包屑导航渲染  \n头像展示实现图片裁剪功能\n\n多级菜单栏组件封装  \nTree组件封装  \n分页组件封装  \n上传组件封装  \n时间组件封装  \n抽屉组件封装\n\n语言国际化i18n的应用  \nCURD场景中SWR的使用  \n权限配置引入动态路由权限  \nUI暗黑化实现前端主题切换\n\n### 妙课堂官网 PC\n\n卡片列表加载优化引入骨架屏  \n列表项预览详情实现Popover弹窗效果  \n长列表优化实现查看更多无限加载  \n文章阅读体验优化实现沉浸模式\n\n图片压缩显示实现图片预览查看原图功能  \n查看记录实现浏览历史功能  \n内容保护实现禁止复制文本  \n导航栏切换详情页标题实现  \nBanner展示实现无缝切换轮播图\n\n首页加载引入CCS3动画过渡  \n导航栏实现毛玻璃效果  \nBanner轮播条实现进度条动画  \n视觉差滚动效果实现\n\n搜索优化实现历史记录功能  \n返回顶部滚动优化添加过渡效果  \n视频播放优化实现空闲预加载  \nWebpack工程化配置与性能优化\n\n### 妙课堂官网 移动端\n\n移动端适配viewport方案实践  \n长列表展示实现虚拟列表  \nvideo背景图展示实现获取视频截图  \n目录列表实现侧边栏导航\n\n文章导航实现页面高度自滚动  \n搜索框弹窗实现输入框聚焦  \nvideo进入可视区域停留自动播放解决  \n悬浮导航按钮封装\n\n列表展示实现上拉加载下拉刷新  \n导航栏菜单实现折叠导航点击动效  \nTabs滑动切换实现手势滑动  \n底部导航实现折叠面板手风琴效果\n\n滚动优化引入better-scroll  \n图片加载优化实现懒加载  \n图标加载优化编写svg初始化加载插件  \nVite工程化配置与应用\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Inbox/%E9%A1%B9%E7%9B%AE%E5%9B%9E%E7%AD%94":{"title":"","content":"\n### 乐酷APP\n\n#### 主体功能模块\n\n##### 组件化功能拆分\n\n##### 城市切换定位功能\n\n##### 搜索节流\n\n##### 瀑布流实现\n\n##### 首字母排序实现\n\n#### 次要功能模块\n\n##### KeepAlive缓存Tabs列表\n[KeepAlive | Vue.js](https://vuejs.org/guide/built-ins/keep-alive.html#basic-usage)\n\n\n##### 多种组件通信\n\n\n##### slot自定义组件内容\n\n##### 异步组件加载Loading组件优化\n\n#### 数据获取模块\n\n##### watchEffect自执行请求数据\n\n##### watch响应城市切换请求数据\n\n##### Axios请求与响应拦截器\n\n#### 组件模块\n\n##### 五星好评组件\n\n##### 级联组件\n\n##### 日历组件\n\n##### 字母索引导航组件\n\n#### 其它模块\n\n##### vue-router动态权限路由\n\n##### Pinia管理客户端数据\n\n##### LocalStorage缓存页面数据\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Resource/%E6%9C%AA%E5%91%BD%E5%90%8D":{"title":"","content":"00:05\n\n各位同学大家好，这节课呢，我们来讲一下react的国际化，那首先呢，我们先创建一个react项目，然后的话，我们可以在S2C底下呢，创建一个文件夹文件夹里面呢，还是存放我们跟语言相关的一些内容，我们比较locals，Locals里面呢，我们定义两个Json文件，一个是1n.Jason就是英文，还有一个呢，是Zh.Jason就是中文，而在这两个Json文件里面呢，我们就订一些内容，比如说我们在这儿呢，我们定一段中文，比如说我们定一个一个模块，这个模块呢，比如说是我们一个用户的模块，那用户模块里面呢，我们订一个字段，那这个字段呢，比如叫ad，那这里的话我们就对应一个新增，\n\n01:02\n\n然后比如在一个edit，他定的是编辑，OK，我们就定这两个字段，然后呢，我们到一点点jays里面也同样的来定一下相对应的一个内容，那如果是APP的话呢，那么我们就应该是ad，如果是APP的话呢，我们就是added，那这样一来，我们相对这个语言就已经有了，那么接下来呢，我们就可以在我们的app.gs里面进行一个改写，那么这个首先我们先安装一下我们的插件，那这个地方我们要安装的是n PM install，一个叫I18NEXT，这个就是做国际化的一个包，然后呢，还有个专门用于right，就是rightf18next，好把这两个包去安装一下，\n\n02:00\n\n这里有点问题，我们再试一次n PM install，这次好像，可以安装上，那我今天网络有点问题，我们一样是看吧，一样ad mi red，I18NEXT，还有呢，就是I18NEXT后面一样来安装吧，好像好像也是网络有问题，我调一下网络，然后我们再安装，OK，那这里面呢，我们已经安装好了，刚才呢，我看了一下是这个淘宝的圆的问题，我在刚才使用的是淘宝的镜像，所以说淘宝镜像呢，好像是有点问题的，如果大家，自己在做的时候也有问题的话呢，你可以把它切换到我们的NPM官方的镜像，\n\n03:01\n\n我们来看一下，在这儿，他说请求这个淘宝镜像呢，失败了对吧，所以说我后来呢，就换了一下我们的官方的NPM镜像，然后呢，在安装最后呢，我们就安装成功了，OK，那安装成功之后呢，我们下面来到这个app.gs里面，那么我们就可以使用这个我们安装这样两个工具了，那么首先呢，我们可以先去import一下，这里呢，我们先这样子，我们在locals里面呢，我们先创建一个index.js啊，去初始化一下我们的S8N这个东西，那么首先呢，我们可以在这个文件里面去引入我们的S8N，Ah from and I SPY next，OK，然后下面下面的话呢，我们要去把这个react f BA next也给它引入进来，\n\n04:08\n\nS8NEXT，这里呢，我们就叫它，我们去拿一个，插件啊，叫in it right s8 next okay from a，灏，这样一来呢，我们就已经初始化了，还有一个就是我们这里的两个，自己语言文件对吧，所以说我们还需要引入这个严from的，一点点，Jason，然后ZH呢，From the h点几省，好，那现在的话我们就可以初始化这个S8了，那初始化呢，我们就是调用这个S8N，然后呢，我们可以去换个行吧，我们可以用这种插件的方式呢，\n\n05:00\n\n去使用我们的，Min is TE red s8 NX的这个插件，这个插件的话呢，其实就是说我要使用read的f BA next插件这两个意思，OK，然后的话我们可以初始化limit limit的时候呢，我们可以传入一个配置，那配置的话，我们可以设置一个默认语言，比如说默认我们是中文ZH，然后呢，如果说出现问题，我们来个备用的语言，我们是也是CH，然后最后我们的，Resources啊，就是我们一些字体，我们一些语言了，那么我们可以设成1MZH跟N，OK，最后呢，一般我们可以按照这个官网它的一个推荐，我们配置一个interpretation，然后呢，把这种转一这个值，这个选项呢，\n\n06:01\n\n这选就是说我们把，传入的值进行转译，来避免这种XSS攻击，我们把这个呢，可以设成force，因为我们root呢，它自己就会进行一个转移的，这这是一个默认的行为，好，那这样一来呢，我们就初始化好了，我们的S8N，那最后呢，我们就把它倒出了export default，我们的F18N，那导出之后呢，我们就可以在我们的入口文件里面，也就是刚才app.js里面把引入进来，那我们import一下import，我们的locus底下的index，OK，引入完之后呢，我们这里面就可以来试一下了，我们这个地方，比如稍微把这都删掉然后呢，我们定一个button，一个按钮，两个button然后吧，它里面呢，\n\n07:00\n\n我们就可以去定义我们的文字，这里我们要使用文字呢，就是我们在这个Json文件里面配置的这里我发现我没有将它们导出是吧，这我们做调整，我们J这样子吧，我们在建立一个叫，resources.js因为他在我们的index.js这个resources配置里面，他想要的不是这样的对象，所以把它先拼接一下，然后最终呢，我们在这里面就引入这个，Resources，点击S，然后把它丢给我们的resource就可以了，好，我们看这个resources他要怎么做呢，他首先就是要把我们刚才那两个语言给他导入进来，所以我们要import一下，这个c h from，zh.cn然后呢，把我们的，一人也导入进来，然后这里呢，其实我们就是想要订一个对象resources，\n\n08:03\n\nResources等于一个对象，然后呢，我们的CH，他希望是一个translation这样的一个属性，就翻译的意思，把它设成我们的ZH，然后呢，同样的我们复制一份，我们写一个，EN，然后最终呢，我们把这个resources呢，导出，resources OK，这个时候呢，我们再把这个消息呢，给它传进去，我们做这样的调整，OK，那我们现在可以回到我们的app.gs然后这里呢，我们的按钮，我们可以用他的呼吸的方式来去使用这个工具，比如说我们可以导入一个叫use transition这样的东西，这个东西呢，它其实是来自于这个他这个包的，然后呢，我们可以从可以在这里，我们去引入这个use transition，\n\n09:04\n\n他是一个方法，我们可以把它执行一下，然后呢，这里面我们可以找一个对象，对象里面有T这样的一个方法，这个方法呢，我们就可以去使用起来，我们可以写T，然后user.ad就是我们先自断，让他们再复制一下，Whatsyourtuser.edit，这个时候呢，我们在外面再包个div，再报一个DV，好这个时候呢，我们来看一下，这应该有个引号，这样子，OK，我们保存，让我来看一下，好可以看到这里呢，是不是就有新增跟编辑了，对吧，那然后如果说我们再定按钮吧，永在底下再来个按钮特，\n\n10:02\n\n这八层的，叫切换语言，那么我们可以切换语言呢，给他绑定一下事件，Click等于呢，我们的一个函数这个函数呢，比如叫做change language，来订一下这样的一个函数，我们可以定一下，趁着language呢，它就是一个函数，这个函数里面呢，其实我们就会调用，我们的F18N里面的，一个方法，这个方法的话呢，叫做就叫做全局language，所以我们可以直接这样调用，然后呢，比如说我们这里填一个英文吧一言，好，现在我们来试一下，我们如果说在页面上我们点切换语言，左边是不是就变英文了，那现在如果说我希望能够让这个切换语言更加灵活一点，\n\n11:02\n\n比如说我们有切换到中文，然后呢，我们也有切换到英文，OK，那这个时候的话呢，我们可以，定一下方法叫change to Chinese，然后把上面的方法改一下呢，牵着Chinese呢，我们就设成中文，然后呢，我们再定一个叫change to English，那这个方法呢，我们把也定一下，我们可以把上面复制一份，OK，然后这个叫change to English，那么设置成英文，好，那现在的话呢，我们再来看一下，我们点击切换到中文就变中文了，点抢到英文呢，就变英文了对吧，那么如果说我是在这种英文模式下，我希望呢，我这个按钮的文字，也能够变为英文的话，\n\n12:00\n\n那这个呢，我们也可以设置一下，比如说我们在英文模式下，我们再添加一个，如果说我的这个，字段的名字叫切换到中文的话，那么我们就把定义成教change to Chinese，啊，Chinese对吧，然后如果我是切换到英文呢，英文的话，那我就change to English这样子，好，那么同样的我们在中文里面呢，也可以这样配置一下吧，那这个的话其实我们就是一样的，就是如果我们切换到中文的话呢，我们就就是切换到中文，切换到英文呢，我就亲爱的，英文有时候我不用进行翻译，那么现在呢，再回来，然后在这儿呢，我们就可以像上面一样用这T的函数，然后呢，往里面放入，\n\n13:00\n\n我们就切换到中文，然后下面是一样的，我们写个T切换到英文，OK，我们来看效果，这里面我们王乐加一个，大括号对吧，把大框给它加上，OK，我们来看下效果，这是在中文模式下载，是不是都是中文的，对吧，然后点切换到英文呢，你看是不是都变英文了，然后如果说我在点切换到中文就都变中文了，所以我们让这个按钮文字呢，也可以实现一个语言的切换，好，好，那这个的话呢，就是我们对right国际化的一个介绍了，\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%B8%8EEffects%E5%90%8C%E6%AD%A5":{"title":"","content":"\n一些组件需要和外部系统同步  \nEffects 允许您在渲染后运行一些代码，以便您可以将组件与 React 外部的某个系统同步\n\n什么是Effects，它和事件有什么不同？\n\n- 渲染代码\n- 事件处理器\n\nEffects 允许您指定由渲染本身而不是由特定事件引起的副作用\n\n不要急于向组件添加 Effects  \n**Effects 通常用于“退出”您的 React 代码并与某些外部系统同步。**\n\n如何编写Effect\n\n1. 声明 Effect\n2. 指定 Effect 依赖\n3. 如果需要添加 cleanup 函数\n\nuseEffect 会“延迟”一段代码的运行，直到该渲染反映在屏幕上\n\n空的依赖关系数组 （[]） 对应于组件“挂载”，即被添加到屏幕中\n\n在React中，渲染应该是JSX的纯粹计算，不应该包含修改 DOM 等副作用\n\n在开发过程中如何处理两次 Effect 发射？\n\n- 控制非 React 窗体\n- 订阅事件\n- 触发动画\n- 获取数据\n- 发送分析\n\n每个渲染都有自己的 Effects\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E9%9C%80%E8%A6%81Effect":{"title":"","content":"\nEffect是React程序中的逃生舱  \n它们允许您“走出”React，并将您的组件与一些外部系统同步\n\n删除不必要的Effects将使代码更易于遵循，运行速度更快，并且不易出错\n\n#### 如何移除不必要的Effects\n\n- 你不需要 Effects 来转换数据以进行渲染\n- 你不需要 Effects 处理用户事件\n\n##### 基于props或state更新状态\n\n当某些东西可以从现有的 props 或 state 中计算出来时，不要把它放在 state 中。相反，请在渲染期间计算它\n\n##### 缓存昂贵的计算\n\n移除过滤处理的派生状态，直接计算结果，并用useMemo缓存结果\n\n```js\nimport { useMemo, useState } from 'react';  \n\nfunction TodoList({ todos, filter }) {  \n\tconst [newTodo, setNewTodo] = useState('');  \n\t// ✅ Does not re-run getFilteredTodos() unless todos or filter change  \n\tconst visibleTodos = useMemo(() =\u003e getFilteredTodos(todos, filter), [todos, filter]);  \n\t// ...  \n}\n```\n\n##### 重置属性更改时的所有状态\n\n##### 在 Props 发生变化时调整某种状态\n\n##### 在事件处理进程之间共享逻辑\n\n当您不确定某些代码应该在 Effect 中还是在事件处理程序中时，问问自己为什么需要运行此代码。仅将 Effects 用于应该运行的代码，因为该组件已显示给用户\n\n##### 发送POST请求\n\n如果此逻辑是由特定交互引起的，请将其保留在事件处理进程中。如果是由用户在屏幕上看到该组件引起的，请将其保留在“效果”中\n\n##### 计算链\n\nEffects 不应该相互耦合，避免构成计算链  \n提取逻辑合并成函数，统一处理状态\n\n##### 初始化应用程序\n\n如果某些逻辑必须为每个应用加载运行一次，而不是每个组件装载运行一次，则可以添加一个顶级变量来跟踪它是否已经执行，并始终跳过重新运行它\n\n##### 通知父组件有关状态更改的信息\n\n“提升状态”允许父组件通过切换父组件自己的状态来完全控制切换。这意味着父组件必须包含更多逻辑，但需要担心的整体状态会更少。每当您尝试保持两个不同的状态变量同步时，尝试提升状态都是一个标志！\n\n##### 将数据传递给父级\n\n在React中，数据流是从父级流向子级  \n当子组件在 Effects 中更新其父组件的状态时，数据流将变得非常难以跟踪\n\n##### 订阅外部存储\n\n##### 获取数据\n\n虽然此组件可见，但您希望根据当前页面和查询使结果与网络中的数据保持同步。这就是为什幺它是一种 Effect  \n虽然仅凭这一点并不像使用框架的内置数据获取机制那样有效，但将数据提取逻辑移动到自定义 Hook 中将使以后更容易采用高效的数据提取策略\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%BD%BF%E7%94%A8Refs%E5%BC%95%E7%94%A8%E5%80%BC":{"title":"","content":"\n想要组件记住一些信息，但不想触发新的渲染，可以使用ref\n\n#### 在组件中添加ref\n\n```js\nconst ref = useRef(0)\n\n{\n\tcurrent: 0\n}\n```\n\n通过ref.value访问ref的当前值  \n\n1. 可变的  \n2. 黑盒——react不会追踪  \n——\u003e 单向数据流的逃生舱\n\n**ref是一个可以读取和修改current属性的原生JavaScript对象  \nrefs 在重新渲染之间由 React 保留，不会触发重渲染**\n\n1. 数据驱动UI——状态  \n2. 数据持久化——ref\n\n| refs                                                                                  | state                                                                                                                     |\n| ------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| useRef(initialValue) 返回 { current: initialValue }  | `useState(initialValue)` 返回状态变量和状态设置函数的当前值 ( `[value, setValue]`) |\n| 改变它不会触发重渲染  | 改变它触发重渲染                                        |\n| 可变的——你能在渲染进程之外修改和更新current的值 | “不可变的”—你能使用状态设置函数去修改状态变量以排队重渲染   |\n| 你不应该在渲染期间读取和重写current值  | 你能在任意时间读取值.然而，每个渲染都有它自己的状态快照，该状态不会改变  |\n\n虽然useState和useRef都是React提供的，但原则上，useRef 可以在useState之上实现\n\n```js\n// Inside of React\nfunction useRef(initialValue) {\n\tconst [ref, unused] = useState({ current: initialValue });\n\treturn ref;\n}\n```\n\nReact提供了useRef的内置版本\n\n**场景**\n\n- 存储timout ID\n- 存储和操作DOM元素\n- 存储计算 JSX 不需要的其他对象\n\n**refs的最佳实践**\n\n- 将refs视为逃生舱口\n- 在渲染期间不要读写ref.current\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E4%BD%BF%E7%94%A8Refs%E6%93%8D%E4%BD%9CDOM":{"title":"","content":"\nReact自动更新DOM去匹配渲染输出  \n在一些场景下，你需要访问由React管理的DOM元素：节点聚焦、滚动到节点或测量其大小和位置\n\n```js\nconst myRef = useRef(null);\n\n\u003cdiv ref={myRef}\u003e\n\n// 你可以使用任意的浏览器API\nmyRef.current.scrollIntoView();\n```\n\n传递函数给ref属性——ref callback\n\n保存从项目 ID 到 DOM 节点的映射\n\n```js\n\u003cli  \n\nkey={cat.id}  \n\nref={node =\u003e {  \n\nconst map = getMap();  \n\nif (node) {  \n\n// Add to the Map  \n\nmap.set(cat.id, node);  \n\n} else {  \n\n// Remove from the Map  \n\nmap.delete(cat.id);  \n\n}  \n\n}}  \n\n\u003e\n```\n\n访问其它组件的 DOM 节点  \nReact 默认不允许组件访问其它组件的 DOM 节点\n\n想要公开其 DOM 节点的组件必须选择加入该行为  \n组件可以指定将其引用“forwards”到其子级之一\n\n```js\nconst MyInput = forwardRef((props, ref) =\u003e {  \n\treturn \u003cinput {...props} ref={ref} /\u003e;  \n});\n```\n\n本质上是转发行为  \n**将由外部定义的ref触发的行为传递给内部指定的 DOM 来触发**\n\n- 低级组件（按钮、输入框）——将其引用转发到其 DOM 节点\n- 高级组件（表单、列表）——不会公开其 DOM 节点，以避免对 DOM 结构的意外依赖\n\n使用命令式句柄公开 API 的子集——约束转发行为  \n使用 ImperativeHandle 指示 React 提供您自己的特殊对象作为父组件的ref值\n\n```js\nconst MyInput = forwardRef((props, ref) =\u003e {\n  const realInputRef = useRef(null);\n  useImperativeHandle(ref, () =\u003e ({\n    // Only expose focus and nothing else\n    focus() {\n      realInputRef.current.focus();\n    },\n  }));\n  return \u003cinput {...props} ref={realInputRef} /\u003e;\n});\n```\n\nReact更新\n\n- 在 render 期间，React 调用你的组件来弄清楚屏幕上应该有什么\n- 在 commit 期间，React 应用更改到 DOM 中\n\n在 commit 期间设置ref.current。在更新 DOM 之前，React 会将受影响的ref.current 值设置为null。更新 DOM 后，React 会立即将它们设置为相应的 DOM 节点\n\n刷新状态与刷新同步同步更新  \nReact 状态更新已排队,因此 DOM 操作是过时的\n\n您可以强制 React 同步更新（“刷新”）DOM。为此，请从 react-dom 导入 flushSync，并将状态更新包装到 flushSync 调用中\n\n```js\nflushSync(() =\u003e {  \n\tsetTodos([ ...todos, newTodo]);  \n});  \n\nlistRef.current.lastChild.scrollIntoView();\n```\n\n使用 refs 进行 DOM 操作的最佳实践  \nRefs 是一个逃生舱口。只有当你必须“走出 React”时，你才应该使用它们\n\n- 避免更改由 React 管理的 DOM 节点\n- 您可以安全地修改 React 没有理由更新的 DOM 部分\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/%E5%8F%8D%E5%BA%94-Effects-%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F":{"title":"","content":"\nEffects 与组件具有不同的生命周期  \n组件可以装载、更新或卸载  \nEffects 只能执行两项操作：开始同步某些内容，稍后停止同步它\n\n#### Effect的生命周期\n\n每个React组件的生命周期\n\n- 组件在添加到屏幕时，组件挂载\n- 组件在接收新的props和状态时，组件更新。通常在响应交互时发生\n- 组件从屏幕中删除时，组件卸载\n\n这是考虑组件的好方法，但不是关于 Effects 的好方法  \n**Effects 描述如何将外部系统与当前属性和状态同步**\n\n##### 为什么同步可能需要多次发生\n\n##### React 如何重新同步您的Effect\n\n停止同步，调用清楚函数  \n React 将运行您在此渲染期间提供的Effect——同步新的状态\n\n##### 从Effect的角度思考\n\n始终专注于每次单个启动/停止周期。组件是挂载、更新还是卸载都无关紧要。您需要做的就是描述如何启动同步以及如何停止同步。如果你做得好，你的 Effect 将能够适应于根据需要多次启动和停止\n\n##### React 如何验证您的Effect是否可以重新同步\n\nReact 通过强制您的 Effect 在开发中立即执行此操作来验证它是否可以重新同步\n\n##### React 如何知道它需要重新同步Effect\n\n显式地指定Effect依赖——当依赖改变，重新同步Effect  \n每次重渲染之后，React会查看传入的依赖数组  \nObject.is比对依赖项\n\n##### 每个Effect表示一个单独的同步过程\n\n依赖项与其内在逻辑应是相关的  \n**代码中的每个Effect都应表示一个单独且独立的同步过程**\n\n#### Effect对反应值有“反应”\n\n在组件内声明的 props、state和其他值是反应式的，因为它们是在渲染期间计算的，并参与 React 数据流\n\n##### 具有空依赖项的Effect意味着什幺\n\n如果您从 Effect 的角度考虑，则根本不需要考虑安装和卸载。重要的是，您已经指定了 Effect 在启动和停止同步时执行的操作。  \n它没有任何反应式的依赖性\n\n##### 组件体中声明的所有变量都是反应式的\n\n**组件内部的所有值（包括道具、状态和你组件主体中的变量）都是反应式的。任何反应性的值都可以在重新渲染时发生变化，所以你需要把反应性的值作为Effect的依赖项**\n\n全局值或可变值是否可以是依赖项？  \n**可变值（包括全局变量）不是反应性的**\n\n##### React 验证您是否将每个反应式值指定为依赖关系\n\n如果你的 linter 是为 React 配置的，它将检查你的 Effect 代码使用的每个反应式值是否都声明为其依赖项\n\n##### 当您不想重新同步时该怎么办\n\n您可以向 linter“证明”这些值不是反应性值，即它们不能因重新渲染而更改  \n将它们移到组件之外  \n也可以将它们移到Effect中，它们不是在渲染期间计算的，因此它们不是反应式的\n\n**Effects 是反应式代码块**\n\n您无法“选择”依赖项。您的依赖项必须包括您在效果中读取的每个反应式值\n\n- 检查您的效果是否代表一个独立的同步过程\n- 如果要读取道具或状态的最新值，而不对其“做出反应”并重新同步效果\n- 避免依赖对象和函数作为依赖项\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/Resource/React%E9%80%83%E7%94%9F%E8%88%B1/Effects%E7%9B%B8%E5%85%B3":{"title":"","content":"\n### 事件与Effects分离\n\n事件处理进程仅在您再次执行相同的交互时重新运行。与事件处理进程不同，如果效果读取的某个值（如 prop 或状态变量）与上次渲染期间的值不同，则效果会重新同步  \n有时，您还希望混合使用这两种行为：一个效果，该效果会根据某些值重新运行，但不会响应其他值\n\n- 事件处理进程中的逻辑不是反应式的。除非用户再次执行相同的交互（例如，单击），否则它不会再次运行。事件处理进程可以读取反应性值，但它们不会对其更改“做出反应”\n- 效果内部的逻辑是被动的。如果效果读取反应性值，则必须将其指定为依赖项。然后，如果重新渲染导致该值发生变化，React 将使用新值再次重新运行效果的逻辑\n\n**您可以将非反应性逻辑从 Effects 移到 Event 函数中。仅从 Effects 内部调用 Event 函数**  \n不要将 Event 函数传递给其他组件或 Hooks\n\n### 移除Effect依赖\n\n当您编写效果时，Linter 将验证您是否已将效果读取的每个反应值（如道具和状态）包含在效果的依赖项列表中  \n这可以确保您的 Effect 与组件的最新 props 和 state 保持同步\n\n#### 依赖项应与代码匹配\n\n#### 要删除依赖项，请证明它不是依赖项\n\n反应式值包括 props 以及直接在组件内部声明的所有变量和函数\n\n这就是您现在可以指定空 （[]） 依赖项列表的原因。你的效果真的不再依赖于任何反应性值，所以当任何组件的道具或状态发生变化时，它真的不需要重新运行\n\n如果要更改依赖项，请先更改周围的代码  \n您可以将依赖项列表视为 Effect 代码使用的所有反应式值的列表\n\n移除不需要的依赖项，需要先解决的问题：\n\n- 此代码是否应移动到事件处理进程？\n- 你的效应是否在做一些不相关的事情？  \n**每个效果都应表示一个独立的同步过程**\n- 您是否正在阅读某些状态来计算下一个状态？\n- 是否要读取值而不对其更改“做出反应”？\n- 某些反应性值是否无意中发生变化？\n\n如果要读取最新值而不“响应”它，请从效果中提取事件函数 （API提案）  \n在 JavaScript 中，如果对象和函数是在不同的时间创建的，则认为它们是不同的  \n尽量避免对象和函数依赖。将它们移到组件外部或效果内部\n","lastmodified":"2022-10-29T15:10:22.645349789Z","tags":null},"/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (测试)","content":"\n## Chinese, Japanese, Korean Support\n几乎在我们意识到之前，我们已经离开了地面。\n\n우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.\n\n私たちがそれを知るほぼ前に、私たちは地面を離れていました。\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = 0$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.","lastmodified":"2022-10-29T15:10:22.717349881Z","tags":null},"/notes/callouts":{"title":"Callouts","content":"\n## Callout support\n\nQuartz supports the same Admonition-callout syntax as Obsidian.\n\nThis includes\n- 12 Distinct callout types (each with several aliases)\n- Collapsable callouts\n\nSee [documentation on supported types and syntax here](https://help.obsidian.md/How+to/Use+callouts#Types).\n\n## Showcase\n\n\u003e [!EXAMPLE] Examples\n\u003e\n\u003e Aliases: example\n\n\u003e [!note] Notes\n\u003e\n\u003e Aliases: note\n\n\u003e [!abstract] Summaries \n\u003e\n\u003e Aliases: abstract, summary, tldr\n\n\u003e [!info] Info \n\u003e\n\u003e Aliases: info, todo\n\n\u003e [!tip] Hint \n\u003e\n\u003e Aliases: tip, hint, important\n\n\u003e [!success] Success \n\u003e\n\u003e Aliases: success, check, done\n\n\u003e [!question] Question \n\u003e\n\u003e Aliases: question, help, faq\n\n\u003e [!warning] Warning \n\u003e\n\u003e Aliases: warning, caution, attention\n\n\u003e [!failure] Failure \n\u003e\n\u003e Aliases: failure, fail, missing\n\n\u003e [!danger] Error\n\u003e\n\u003e Aliases: danger, error\n\n\u003e [!bug] Bug\n\u003e\n\u003e Aliases: bug\n\n\u003e [!quote] Quote\n\u003e\n\u003e Aliases: quote, cite\n","lastmodified":"2022-10-29T15:10:22.717349881Z","tags":null},"/notes/config":{"title":"Configuration","content":"\n## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml {title=\"data/config.yaml\"}\n# The name to display in the footer\nname: Jacky Zhao\n\n# whether to globally show the table of contents on each page\n# this can be turned off on a per-page basis by adding this to the\n# front-matter of that note\nenableToc: true\n\n# whether to by-default open or close the table of contents on each page\nopenToc: false\n\n# whether to display on-hover link preview cards\nenableLinkPreview: true\n\n# whether to render titles for code blocks\nenableCodeBlockTitle: true \n\n# whether to render copy buttons for code blocks\nenableCodeBlockCopy: true \n\n# whether to render callouts\nenableCallouts: true\n\n# whether to try to process Latex\nenableLatex: true\n\n# whether to enable single-page-app style rendering\n# this prevents flashes of unstyled content and improves\n# smoothness of Quartz. More info in issue #109 on GitHub\nenableSPA: true\n\n# whether to render a footer\nenableFooter: true\n\n# whether backlinks of pages should show the context in which\n# they were mentioned\nenableContextualBacklinks: true\n\n# whether to show a section of recent notes on the home page\nenableRecentNotes: false\n\n# whether to display an 'edit' button next to the last edited field\n# that links to github\nenableGitHubEdit: true\nGitHubLink: https://github.com/jackyzha0/quartz/tree/hugo/content\n\n# whether to use Operand to power semantic search\n# IMPORTANT: replace this API key with your own if you plan on using\n# Operand search!\nenableSemanticSearch: false\noperandApiKey: \"REPLACE-WITH-YOUR-OPERAND-API-KEY\"\n\n# page description used for SEO\ndescription:\n  Host your second brain and digital garden for free. Quartz features extremely fast full-text search,\n  Wikilink support, backlinks, local graph, tags, and link previews.\n\n# title of the home page (also for SEO)\npage_title:\n  \"🪴 Quartz 3.3\"\n\n# links to show in the footer\nlinks:\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Code Block Titles\nTo add code block titles with Quartz:\n\n1. Ensure that code block titles are enabled in Quartz's configuration:\n\n    ```yaml {title=\"data/config.yaml\", linenos=false}\n    enableCodeBlockTitle: true\n    ```\n\n2. Add the `title` attribute to the desired [code block\n   fence](https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences):\n\n      ```markdown {linenos=false}\n       ```yaml {title=\"data/config.yaml\"}\n       enableCodeBlockTitle: true  # example from step 1\n       ```\n      ```\n\n**Note** that if `{title=\u003cmy-title\u003e}` is included, and code block titles are not\nenabled, no errors will occur, and the title attribute will be ignored.\n\n### HTML Favicons\nIf you would like to customize the favicons of your Quartz-based website, you \ncan add them to the `data/config.yaml` file. The **default** without any set \n`favicon` key is:\n\n```html {title=\"layouts/partials/head.html\", linenostart=15}\n\u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n```\n\nThe default can be overridden by defining a value to the `favicon` key in your \n`data/config.yaml` file. For example, here is a `List[Dictionary]` example format, which is\nequivalent to the default:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon:\n  - { rel: \"shortcut icon\", href: \"icon.png\", type: \"image/png\" }\n#  - { ... } # Repeat for each additional favicon you want to add\n```\n\nIn this format, the keys are identical to their HTML representations.\n\nIf you plan to add multiple favicons generated by a website (see list below), it\nmay be easier to define it as HTML. Here is an example which appends the \n**Apple touch icon** to Quartz's default favicon:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon: |\n  \u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n  \u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\"\u003e\n```\n\nThis second favicon will now be used as a web page icon when someone adds your \nwebpage to the home screen of their Apple device. If you are interested in more \ninformation about the current and past standards of favicons, you can read \n[this article](https://www.emergeinteractive.com/insights/detail/the-essentials-of-favicons/).\n\n**Note** that all generated favicon paths, defined by the `href` \nattribute, are relative to the `static/` directory.\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml {title=\"data/graphConfig.yaml\"}\n# if true, a Global Graph will be shown on home page with full width, no backlink.\n# A different set of Local Graphs will be shown on sub pages.\n# if false, Local Graph will be default on every page as usual\nenableGlobalGraph: false\n\n### Local Graph ###\nlocalGraph:\n    # whether automatically generate a legend\n    enableLegend: false\n    \n    # whether to allow dragging nodes in the graph\n    enableDrag: true\n    \n    # whether to allow zooming and panning the graph\n    enableZoom: true\n    \n    # how many neighbours of the current node to show (-1 is all nodes)\n    depth: 1\n    \n    # initial zoom factor of the graph\n    scale: 1.2\n    \n    # how strongly nodes should repel each other\n    repelForce: 2\n\n    # how strongly should nodes be attracted to the center of gravity\n    centerForce: 1\n\n    # what the default link length should be\n    linkDistance: 1\n    \n    # how big the node labels should be\n    fontSize: 0.6\n    \n    # scale at which to start fading the labes on nodes\n    opacityScale: 3\n\n### Global Graph ###\nglobalGraph:\n\t# same settings as above\n\n### For all graphs ###\n# colour specific nodes path off of their path\npaths:\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Language Support\n[CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'مدونتي'\n    weight = 1\n```\n","lastmodified":"2022-10-29T15:10:22.717349881Z","tags":null},"/notes/custom-Domain":{"title":"Custom Domain","content":"\n### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2022-10-29T15:10:22.717349881Z","tags":null},"/notes/editing":{"title":"Editing Content in Quartz","content":"\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.**\n\nTo create a link between notes in your garden, just create a normal link using Markdown pointing to the document in question. Please note that **all links should be relative to the root `/content` path**. \n\n```markdown\nFor example, I want to link this current document to `notes/config.md`.\n[A link to the config page](notes/config.md)\n```\n\nSimilarly, you can put local images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\nYou can also use wikilinks if that is what you are more comfortable with!\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so. You can also add tags here as well.\n\n```yaml\n---\ntitle: \"Example Title\"\ntags:\n- example-tag\n---\n\nRest of your content here...\n```\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\n\u003e 🔗 Step 3: [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n## Previewing Changes\nThis step is purely optional and mostly for those who want to see the published version of their digital garden locally before opening it up to the internet. This is *highly recommended* but not required.\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n\nFor those who like to live life more on the edge, viewing the garden through Obsidian gets you pretty close to the real thing.\n\n## Publishing Changes\nNow that you know the basics of managing your digital garden using Quartz, you can publish it to the internet!\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-10-29T15:10:22.717349881Z","tags":null},"/notes/hosting":{"title":"Deploying Quartz to the Web","content":"\n## Hosting on GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions\nBy default, GitHub disables workflows from running automatically on Forked Repostories. Head to the 'Actions' tab of your forked repository and Enable Workflows to setup deploying your Quartz site!\n\n![Enable GitHub Actions](notes/images/github-actions.png)*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`. \n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`. **You need to do this especially if you are using GitHub!**\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml {title=\".github/workflows/deploy.yaml\"}\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n❌ [Excluding pages from being published](notes/ignore%20notes.md)\n\n---\n\nNow that your Quartz is live, let's figure out how to make Quartz really *yours*!\n\n\u003e Step 6: 🎨 [Customizing Quartz](notes/config.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-10-29T15:10:22.717349881Z","tags":null},"/notes/ignore-notes":{"title":"Ignoring Notes","content":"\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown\n---\ntitle: Some Private Note\ndraft: true\n---\n...\n```\n\nMore details in [Hugo's documentation](https://gohugo.io/getting-started/configuration/#ignore-content-and-data-files-when-rendering).\n\n### Global Ignore\nHowever, just adding to the `ignoreFiles` will only prevent the page from being access through Quartz. If you want to prevent the file from being pushed to GitHub (for example if you have a public repository), you need to also add the path to the `.gitignore` file at the root of the repository.","lastmodified":"2022-10-29T15:10:22.717349881Z","tags":null},"/notes/obsidian":{"title":"Obsidian Vault Integration","content":"\n## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\n1. Under Options \u003e Files and Links, set the New link format to always use Absolute Path in Vault.\n2. Go to Settings \u003e Files \u0026 Links \u003e Turn \"on\" automatically update internal links.\n\n![Obsidian Settings](/notes/images/obsidian-settings.png)*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n**If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)","lastmodified":"2022-10-29T15:10:22.721349886Z","tags":null},"/notes/philosophy":{"title":"Quartz Philosophy","content":"\n\u003e “[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.” — Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.\n","lastmodified":"2022-10-29T15:10:22.721349886Z","tags":null},"/notes/preview-changes":{"title":"Preview Changes","content":"\nIf you'd like to preview what your Quartz site looks like before deploying it to the internet, here's exactly how to do that!\n\nNote that both of these steps need to be completed.\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```bash\n# Install and link `hugo-obsidian` locally\ngo install github.com/jackyzha0/hugo-obsidian@latest\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated!\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```bash\n# Navigate to your local Quartz folder\ncd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\nmake serve\n\n# View your site in a browser at http://localhost:1313/\n```\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)","lastmodified":"2022-10-29T15:10:22.721349886Z","tags":null},"/notes/search":{"title":"Search","content":"\nQuartz supports two modes of searching through content.\n\n## Full-text\nFull-text search is the default in Quartz. It produces results that *exactly* match the search query. This is easier to setup but usually produces lower quality matches.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: false\n```\n\n## Natural Language\nNatural language search is powered by [Operand](https://operand.ai/). It understands language like a person does and finds results that best match user intent. In this sense, it is closer to how Google Search works.\n\nNatural language search tends to produce higher quality results than full-text search.\n\nHere's how to set it up.\n\n1. Create an Operand Account on [their website](https://operand.ai/).\n2. Go to Dashboard \u003e Settings \u003e Integrations.\n3. Follow the steps to setup the GitHub integration. Operand needs access to GitHub in order to index your digital garden properly!\n4. Head over to Dashboard \u003e Objects and press `(Cmd + K)` to open the omnibar and select 'Create Collection'.\n\t1. Set the 'Collection Label' to something that will help you remember it.\n\t2. You can leave the 'Parent Collection' field empty.\n5. Click into your newly made Collection.\n\t1. Press the 'share' button that looks like three dots connected by lines.\n\t2. Set the 'Interface Type' to `object-search` and click 'Create'.\n\t3. This will bring you to a new page with a search bar. Ignore this for now.\n6. Go back to Dashboard \u003e Settings \u003e API Keys and find your Quartz-specific Operand API key under 'Other keys'.\n\t1. Copy the key (which looks something like `0e733a7f-9b9c-48c6-9691-b54fa1c8b910`).\n\t2. Open `data/config.yaml`. Set `enableSemanticSearch` to `true` and `operandApiKey` to your copied key.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: true\noperandApiKey: \"0e733a7f-9b9c-48c6-9691-b54fa1c8b910\"\n```\n7. Make a commit and push your changes to GitHub. See the [[notes/hosting|hosting]] page if you haven't done this already.\n\t1. This step is *required* for Operand to be able to properly index your content. \n\t2. Head over to Dashboard \u003e Objects and select the collection that you made earlier\n8. Press `(Cmd + K)` to open the omnibar again and select 'Create GitHub Repo'\n\t1. Set the 'Repository Label' to `Quartz`\n\t2. Set the 'Repository Owner' to your GitHub username\n\t3. Set the 'Repository Ref' to `master`\n\t4. Set the 'Repository Name' to the name of your repository (usually just `quartz` if you forked the repository without changing the name)\n\t5. Leave 'Root Path' and 'Root URL' empty\n9. Wait for your repository to index and enjoy natural language search in Quartz! Operand refreshes the index every 2h so all you need to do is just push to GitHub to update the contents in the search.","lastmodified":"2022-10-29T15:10:22.721349886Z","tags":null},"/notes/setup":{"title":"Setup","content":"\n## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\n📁 [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. If you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\ngit clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n\u003e ✏️ Step 2: [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-10-29T15:10:22.721349886Z","tags":null},"/notes/showcase":{"title":"Showcase","content":"\nWant to see what Quartz can do? Here are some cool community gardens :)\n\n- [Quartz Documentation (this site!)](https://quartz.jzhao.xyz/)\n- [Jacky Zhao's Garden](https://jzhao.xyz/)\n- [Scaling Synthesis - A hypertext research notebook](https://scalingsynthesis.com/)\n- [AWAGMI Intern Notes](https://notes.awagmi.xyz/)\n- [Shihyu's PKM](https://shihyuho.github.io/pkm/)\n- [Chloe's Garden](https://garden.chloeabrasada.online/)\n- [SlRvb's Site](https://slrvb.github.io/Site/)\n- [Course notes for Information Technology Advanced Theory](https://a2itnotes.github.io/quartz/)\n- [Brandon Boswell's Garden](https://brandonkboswell.com)\n- [Siyang's Courtyard](https://siyangsun.github.io/courtyard/)\n- [Data Dictionary 🧠](https://glossary.airbyte.com/)\n- [sspaeti.com's Second Brain](https://brain.sspaeti.com/)\n- [oldwinterの数字花园](https://garden.oldwinter.top/)\n\nIf you want to see your own on here, submit a [Pull Request adding yourself to this file](https://github.com/jackyzha0/quartz/blob/hugo/content/notes/showcase.md)!\n","lastmodified":"2022-10-29T15:10:22.721349886Z","tags":null},"/notes/troubleshooting":{"title":"Troubleshooting and FAQ","content":"\nStill having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup Google Analytics?\nYou can edit it in `config.toml` and either use a V3 (UA-) or V4 (G-) tag.\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\n🐛 [Submit an Issue](https://github.com/jackyzha0/quartz/issues)","lastmodified":"2022-10-29T15:10:22.721349886Z","tags":null},"/notes/updating":{"title":"Updating","content":"\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n```\n\nOr, if you don't want the interactive parts and just want to force update your local garden (this assumed that you are okay with some of your personalizations been overriden!)\n\n```shell\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e [!warning] Warning!\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```\n","lastmodified":"2022-10-29T15:10:22.721349886Z","tags":null}}